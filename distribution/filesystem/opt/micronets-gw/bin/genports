#!/bin/bash

source /etc/openvswitch/ovs.conf

cat <<"END_OF_JAVASCRIPT" > /tmp/genports.js

'use strict';

const cp  = require('child_process');

function padend(s, l) {
  while (s.length < l) {
    s += ' ';
  }
  return s;
}

let cmd = process.env.JSONCMD;
let output = [];
cp.exec(cmd, (error, stdout, stderr) => {
  if (error) {
    console.error(`exec error: ${error}`);
    return;
  }
  var json = JSON.parse(stdout);
  var hlen = json.headings.length;
  let index = 0;
  json.data.forEach(d1 => {
    let dl = d1.length;
    if (dl !== hlen) { 
      console.error(`!!! ABORTING: DATA LENGTH: ${dl} != HEADER LEN: ${hlen}`);
      return; 
    }
    let col = 0;
    let line = {};
    d1.forEach(d2 => {
      let v = undefined;
      if (Array.isArray(d2)) {
        switch (d2[0]) {
          case 'set':
          case 'map':
          case 'uuid':
            v = d2[1];
            break;
          default:
            v = "!!!!! ARRAY CLASSIFICATION ERROR: " + d2;
        }
      } else {
        v = d2;
      }
      let showCol = true;
      switch (typeof(v)) {
        case 'object':
          showCol = !Array.isArray(v) || v.length !== 0;
          break;
        case 'string':
          showCol = v.length !== 0;
          break;
      }
      if (showCol) {
        let colHeading = json.headings[col];
        switch (colHeading) {
          case 'mac_in_use':
            line.mac = v;
            break;
          case 'name':
            line.name = v;
            break;
          case 'ofport':
            line.ofport = v;
            break;
        }
      }
      col++;
    });
    let ae = [ `OFPORT_${line.name.toUpperCase()}=${line.ofport}`, `# Interface: ${line.name}`, `MAC: ${line.mac}`];
    output.push(ae);
    index++;
  });

  let cols = [0,0,0];
  output.forEach(o  => {
    for (let i=0; i<3; i++) {
      cols[i] = Math.max(o[i].length, cols[i]);
    }
  });
 
  cols = cols.map(col => col + 1);

  console.log('# *** THIS FILE IS AUTOMATICALLY GENERATED                              ***');
  console.log('# *** DO NOT EDIT: ALL EDITS WILL BE LOST                               ***');
  console.log('# *** ports.conf contains the physical port mappings on the OvS bridge. ***');
  console.log('# *** Generated by the the genports script.                             ***');
  
 
  output.forEach(o => {
    let s = "";
    for (let i=0; i<3; i++) {
      s += padend(o[i], cols[i]);
    }
    console.log(s);
  });
});
END_OF_JAVASCRIPT
  

JSONCMD="$OVS_BIN_DIR/ovsdb-client dump ${OVSDB_CONNECT_SOCKET} --format=json Interface" nodejs /tmp/genports.js

rm /tmp/genports.js

